#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.9.3)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import TSSLSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

from prepaid import prepaid
from prepaid.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print('')
  print('Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] [-s[sl]] function [arg1 [arg2...]]')
  print('')
  print('Functions:')
  print('  PrepaidRecord recharge(RechargeArg arg)')
  print('  PrepaidRecord consume(ConsumeArg arg)')
  print('  PrepaidRecord query(QueryArg arg)')
  print('  PrepaidRecord refund(RefundArg arg)')
  print('  PrepaidRecord op_balance(OPPrepaidBalanceArg arg)')
  print('  PrepaidRecord prepaid_notify(PrepaidNotifyArg arg)')
  print('   balance(i32 cid,  userid_list)')
  print('   all_balance(i32 cid)')
  print('   m_balance(i64 userid,  cid_list)')
  print('   m_all_balance(i64 userid)')
  print('  string ping()')
  print('')
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
ssl = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

if sys.argv[argi] == '-s' or sys.argv[argi] == '-ssl':
  ssl = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSSLSocket.TSSLSocket(host, port, validate=False) if ssl else TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = prepaid.Client(protocol)
transport.open()

if cmd == 'recharge':
  if len(args) != 1:
    print('recharge requires 1 args')
    sys.exit(1)
  pp.pprint(client.recharge(eval(args[0]),))

elif cmd == 'consume':
  if len(args) != 1:
    print('consume requires 1 args')
    sys.exit(1)
  pp.pprint(client.consume(eval(args[0]),))

elif cmd == 'query':
  if len(args) != 1:
    print('query requires 1 args')
    sys.exit(1)
  pp.pprint(client.query(eval(args[0]),))

elif cmd == 'refund':
  if len(args) != 1:
    print('refund requires 1 args')
    sys.exit(1)
  pp.pprint(client.refund(eval(args[0]),))

elif cmd == 'op_balance':
  if len(args) != 1:
    print('op_balance requires 1 args')
    sys.exit(1)
  pp.pprint(client.op_balance(eval(args[0]),))

elif cmd == 'prepaid_notify':
  if len(args) != 1:
    print('prepaid_notify requires 1 args')
    sys.exit(1)
  pp.pprint(client.prepaid_notify(eval(args[0]),))

elif cmd == 'balance':
  if len(args) != 2:
    print('balance requires 2 args')
    sys.exit(1)
  pp.pprint(client.balance(eval(args[0]),eval(args[1]),))

elif cmd == 'all_balance':
  if len(args) != 1:
    print('all_balance requires 1 args')
    sys.exit(1)
  pp.pprint(client.all_balance(eval(args[0]),))

elif cmd == 'm_balance':
  if len(args) != 2:
    print('m_balance requires 2 args')
    sys.exit(1)
  pp.pprint(client.m_balance(eval(args[0]),eval(args[1]),))

elif cmd == 'm_all_balance':
  if len(args) != 1:
    print('m_all_balance requires 1 args')
    sys.exit(1)
  pp.pprint(client.m_all_balance(eval(args[0]),))

elif cmd == 'ping':
  if len(args) != 0:
    print('ping requires 0 args')
    sys.exit(1)
  pp.pprint(client.ping())

else:
  print('Unrecognized method %s' % cmd)
  sys.exit(1)

transport.close()
